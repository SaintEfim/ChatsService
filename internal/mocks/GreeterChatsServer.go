// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	chat "ChatsService/proto/chat"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// GreeterChatsServer is an autogenerated mock type for the GreeterChatsServer type
type GreeterChatsServer struct {
	mock.Mock
}

// CreateMessage provides a mock function with given fields: _a0, _a1
func (_m *GreeterChatsServer) CreateMessage(_a0 context.Context, _a1 *chat.MessageCreateRequest) (*chat.MessageCreateResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for CreateMessage")
	}

	var r0 *chat.MessageCreateResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *chat.MessageCreateRequest) (*chat.MessageCreateResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *chat.MessageCreateRequest) *chat.MessageCreateResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*chat.MessageCreateResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *chat.MessageCreateRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mustEmbedUnimplementedGreeterChatsServer provides a mock function with no fields
func (_m *GreeterChatsServer) mustEmbedUnimplementedGreeterChatsServer() {
	_m.Called()
}

// NewGreeterChatsServer creates a new instance of GreeterChatsServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGreeterChatsServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *GreeterChatsServer {
	mock := &GreeterChatsServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
